/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import dao.AlunoDAO;
import dao.CursoDAO;
import factory.ConnectionDB;
import java.sql.Connection;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.sql.Date;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Aluno;

/**
 *
 * @author faelb
 */
public class CadastroAluno extends javax.swing.JFrame {
    private Connection conn;
    
    public CadastroAluno() {
        initComponents();
        this.conn = new ConnectionDB().getConnection();
    }
    
    public boolean validarData(String data) {
    try {
        LocalDate.parse(data);
        return true;
    } catch (Exception e) {
        return false;
        
    }
}
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        cpf = new javax.swing.JTextField();
        telefone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        datanasc = new javax.swing.JTextField();
        cadastrar = new javax.swing.JButton();
        voltar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        reabilitar = new javax.swing.JButton();
        desabilitar = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        lista = new javax.swing.JButton();
        Atualizar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        curso = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SISTEMA DE GESTÃO DE ALUNOS");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Insira as informações abaixo:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14))); // NOI18N

        jLabel2.setText("Nome:");

        jLabel3.setText("CPF:");

        jLabel4.setText("Telefone:");

        jLabel5.setText("Email:");

        jLabel6.setText("Data de Nascimento:");

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfActionPerformed(evt);
            }
        });

        telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        datanasc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                datanascActionPerformed(evt);
            }
        });

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        reabilitar.setText("Reabilitar");
        reabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reabilitarActionPerformed(evt);
            }
        });

        desabilitar.setText("Desabilitar");
        desabilitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desabilitarActionPerformed(evt);
            }
        });

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        lista.setText("Lista de alunos");
        lista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaActionPerformed(evt);
            }
        });

        Atualizar.setText("Atualizar");
        Atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizarActionPerformed(evt);
            }
        });

        jLabel7.setText("ID do Curso:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(lista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Atualizar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(desabilitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(reabilitar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 393, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(voltar, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                            .addComponent(limpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(93, 93, 93))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(curso, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(datanasc, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(email, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(telefone, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpf, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nome, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datanasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(curso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadastrar)
                    .addComponent(editar)
                    .addComponent(reabilitar)
                    .addComponent(limpar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desabilitar)
                    .addComponent(voltar)
                    .addComponent(lista)
                    .addComponent(Atualizar))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfActionPerformed

    private void telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefoneActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void datanascActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datanascActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_datanascActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SplashScreen().setVisible(true);
            }
        });
        this.dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        if(nome.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "A área Nome deve ser preenchida");return;}
        if(nome.getText().length() <= 3){JOptionPane.showMessageDialog(rootPane, "O nome deve ter no mínimo 3 dígitos");return;}        
        if(cpf.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "A área CPF deve ser preenchida");return;}
        if(telefone.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "A área Telefone deve ser preenchida");return;}
        if(cpf.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "A área Data de Nascimento deve ser preenchida");return;}
        if(curso.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "O aluno deve ser cadastrado em um curso");return;}
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dataConvertida = LocalDate.parse(datanasc.getText(), formatter);
        Date data = Date.valueOf(dataConvertida);
        int IDcurso = Integer.parseInt(curso.getText());
        Aluno aluno = new Aluno(nome.getText(),cpf.getText(),telefone.getText(),email.getText(),data,1);
        if(!aluno.validarCPF(cpf.getText())){JOptionPane.showMessageDialog(rootPane,"CPF inválido");return;}
        if(!aluno.validarEmail(email.getText())){JOptionPane.showMessageDialog(rootPane,"Email inválido");return;}
        if(!aluno.validarTelefone(telefone.getText())){JOptionPane.showMessageDialog(rootPane,"Telefone inválido");return;}
        if (!aluno.validarIdade(data)) {JOptionPane.showMessageDialog(null, "Idade inválida. Aluno deve ter no mínimo 16 anos.");return;}
        CursoDAO dao1 = new CursoDAO();
        AlunoDAO dao = new AlunoDAO();
        try{
            if (dao1.podeCadastrarMaisAlunos(IDcurso)) {
                dao.insertDB(nome.getText(),cpf.getText(),telefone.getText(),email.getText(), data,1,IDcurso);
            }
            else {JOptionPane.showMessageDialog(null, "Limite de alunos atingido para esse curso.");return;
            }
        }catch(SQLException ex){Logger.getLogger("Erro no cadastro:"+ex);}
    }//GEN-LAST:event_cadastrarActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        nome.setText("");
        cpf.setText("");
        telefone.setText("");
        email.setText("");
        datanasc.setText("");
        curso.setText("");
        curso.setEditable(true);
    }//GEN-LAST:event_limparActionPerformed

    private void listaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaActionPerformed
        try {
            TabelaAlunos acao = new TabelaAlunos();
            acao.listar();
        } catch (SQLException ex) {
            Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listaActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        AlunoDAO aluno = new AlunoDAO();
        String n = JOptionPane.showInputDialog("Digite o ID do aluno:");
        int id = Integer.parseInt(n);
       curso.setEditable(false);
        try {
           List<Aluno> alunos = aluno.Editar(id);
           for (Aluno c : alunos) {
               LocalDate localDate = c.getDatanasc().toLocalDate();
                DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                String dataFormatada = localDate.format(formato);
    
                Object[] dados = {
                c.getNome(),
                c.getCpf(),
                c.getTelefone(),
                c.getEmail(),
                dataFormatada,
                aluno.pegarIDcurso(c.getNome())
                };
                nome.setText((String) dados[0]);
                cpf.setText((String) dados[1]);
                telefone.setText((String) dados[2]);
                email.setText((String) dados[3]);
                datanasc.setText(dados[4].toString());
                curso.setText(dados[5].toString());
            }
        }catch (SQLException ex) {
            Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_editarActionPerformed

    private void AtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizarActionPerformed
    if (nome.getText().length() <= 3){JOptionPane.showMessageDialog(rootPane, "O nome deve ter no mínimo 3 dígitos");return;}
    if (curso.getText().equals("")){JOptionPane.showMessageDialog(rootPane, "O aluno deve ser cadastrado em um curso");return;}
    curso.setEditable(true);
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
    LocalDate dataConvertida;
    try {
        dataConvertida = LocalDate.parse(datanasc.getText(), formatter);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(rootPane, "Data inválida! Use o formato dd/MM/yyyy");
        return;
    }

    Date data = Date.valueOf(dataConvertida); 
    AlunoDAO aluno = new AlunoDAO();
    Aluno aluno2 = new Aluno(nome.getText(), cpf.getText(), telefone.getText(), email.getText(), data, 1);

    String n = JOptionPane.showInputDialog("Confirme o ID do aluno:");
    int id = Integer.parseInt(n);
    int idcurso = Integer.parseInt(curso.getText());
    if (!aluno2.validarCPF(cpf.getText())) {JOptionPane.showMessageDialog(rootPane, "CPF inválido");return;}
    if (!aluno2.validarEmail(email.getText())) {JOptionPane.showMessageDialog(rootPane, "Email inválido");return;}
    if (!aluno2.validarTelefone(telefone.getText())) {JOptionPane.showMessageDialog(rootPane, "Telefone inválido");return;}
    if (!aluno2.validarIdade(data)) {JOptionPane.showMessageDialog(null, "Idade inválida. Aluno deve ter no mínimo 16 anos.");return;}

    try {
        aluno.atualizar(id, nome.getText(), cpf.getText(), telefone.getText(), email.getText(), data, idcurso);
        JOptionPane.showMessageDialog(rootPane, "Aluno atualizado com sucesso");
    } catch (SQLException ex) {
        Logger.getLogger(CadastroAluno.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_AtualizarActionPerformed

    private void desabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desabilitarActionPerformed
       AlunoDAO dao = new AlunoDAO();
       String n = JOptionPane.showInputDialog("Digite o ID do Aluno:");
       
       int id = Integer.parseInt(n);
       
        try {
            dao.desativarAluno(id);
            JOptionPane.showMessageDialog(rootPane, "Aluno Desabilitado");
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_desabilitarActionPerformed

    private void reabilitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reabilitarActionPerformed
       AlunoDAO dao = new AlunoDAO();
       String n = JOptionPane.showInputDialog("Digite o ID do Aluno:");
       
       int id = Integer.parseInt(n);
       
        try {
            dao.ativarAluno(id);
            JOptionPane.showMessageDialog(rootPane, "Aluno Reativado");
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_reabilitarActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroAluno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atualizar;
    private javax.swing.JButton cadastrar;
    private javax.swing.JTextField cpf;
    private javax.swing.JTextField curso;
    private javax.swing.JTextField datanasc;
    private javax.swing.JButton desabilitar;
    private javax.swing.JButton editar;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton limpar;
    private javax.swing.JButton lista;
    private javax.swing.JTextField nome;
    private javax.swing.JButton reabilitar;
    private javax.swing.JTextField telefone;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
